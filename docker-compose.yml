version: '3.8'

services:
  app:
    build: .
    container_name: url-shortener-api
    volumes:
      - .:/app  
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - REDIS_ADDR=redis:6379
      - MONGO_URI=mongodb://mongo:27017
      - URL_PREFIX=http://localhost:8080/
    networks:
      - monitoring
    depends_on:
      - redis
      - mongo
      - elasticsearch

  redis:
    image: redis:7-alpine
    container_name: url-shortener-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - monitoring

  mongo:
    image: mongo:7
    container_name: url-shortener-mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - monitoring
    depends_on:
      - prometheus

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - monitoring

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.2
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - monitoring
    depends_on:
      - elasticsearch

volumes:
  redis-data: {}
  mongo-data: {}
  esdata: {}

networks:
  monitoring:
